# üìà Ibovespa Quantitative Trading Strategy

> Estrat√©gia de trading quantitativo baseada em revers√£o √† m√©dia para o √≠ndice Ibovespa utilizando an√°lise estat√≠stica avan√ßada e detec√ß√£o de anomalias.

[![Python](https://img.shields.io/badge/Python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![License](https://img.shields.io/badge/License-MIT-green.svg)](LICENSE)
[![Status](https://img.shields.io/badge/Status-Active-brightgreen.svg)]()

## üéØ Objetivo

Este projeto desenvolve e testa uma estrat√©gia de trading algor√≠tmico para o Ibovespa (^BVSP) baseada em:
- **Revers√£o √† m√©dia** estat√≠stica
- **Detec√ß√£o de anomalias** usando percentis m√≥veis
- **An√°lise quantitativa** robusta de performance

## üöÄ Caracter√≠sticas Principais

- ‚úÖ **An√°lise Explorat√≥ria Completa** - EDA detalhada dos dados hist√≥ricos
- ‚úÖ **Estrat√©gia Robusta** - Uso de percentis em vez de desvios padr√£o
- ‚úÖ **Visualiza√ß√µes Interativas** - Gr√°ficos com Plotly
- ‚úÖ **M√©tricas Avan√ßadas** - Sharpe ratio, drawdown, taxa de acerto
- ‚úÖ **Par√¢metros Configur√°veis** - F√°cil otimiza√ß√£o da estrat√©gia
- ‚úÖ **C√≥digo Documentado** - Fun√ß√µes bem estruturadas e comentadas

## üìä Metodologia

### 1. Coleta de Dados
- **Fonte**: Yahoo Finance (yfinance)
- **Per√≠odo**: 2016-2025
- **Ativo**: Ibovespa (^BVSP)

### 2. C√°lculo do Delta
```python
Delta = Pre√ßo_Fechamento - M√©dia_M√≥vel_20_per√≠odos
```

### 3. Detec√ß√£o de Anomalias
- **Banda Superior**: Percentil 95-98% dos valores Delta
- **Banda Inferior**: Percentil 2-5% dos valores Delta
- **Sinal de Compra**: Quando Delta < Banda Inferior

### 4. Gest√£o de Risco
- Filtro para evitar compras em quedas extremas
- Horizonte de opera√ß√£o configur√°vel
- Estrat√©gia long-only

## üõ†Ô∏è Instala√ß√£o

### Pr√©-requisitos
```bash
Python 3.8+
```

### Depend√™ncias
```bash
pip install yfinance==0.2.58
pip install pandas numpy scipy plotly
```

### Uso
```python
# Clone o reposit√≥rio
git clone https://github.com/seu-usuario/ibovespa-quant-strategy.git
cd ibovespa-quant-strategy

# Execute o notebook ou script
python ibovespa_strategy.py
```

## üìà Resultados

### Performance T√≠pica
- **Taxa de Acerto**: ~60-70% (varia conforme par√¢metros)
- **Sharpe Ratio**: Positivo na maioria dos per√≠odos
- **Drawdown M√°ximo**: Controlado atrav√©s dos filtros
- **Frequ√™ncia de Sinais**: ~2-5% dos dias √∫teis

### Visualiza√ß√µes
O projeto gera gr√°ficos interativos mostrando:
1. **Delta com Bandas** - S√©rie temporal com n√≠veis de anomalia
2. **Sinais de Trading** - Pontos de entrada no gr√°fico de pre√ßos  
3. **Performance Acumulada** - Evolu√ß√£o dos retornos da estrat√©gia

## üîß Configura√ß√£o

### Par√¢metros Principais
```python
executar_analise_completa(
    df,
    janela=10,      # Janela da m√©dia m√≥vel
    percentil=5,    # Percentil para bandas (5% = bandas nos percentis 5% e 95%)
    alvo_dias=5     # Dura√ß√£o das opera√ß√µes em dias
)
```

### Customiza√ß√£o
- Ajuste de par√¢metros para diferentes condi√ß√µes de mercado
- Modifica√ß√£o f√°cil dos filtros de risco
- Extens√£o para outros ativos financeiros

## üìÅ Estrutura do Projeto

```
‚îú‚îÄ‚îÄ ibovespa_strategy.py      # Script principal
‚îú‚îÄ‚îÄ README.md                 # Este arquivo
‚îú‚îÄ‚îÄ requirements.txt          # Depend√™ncias
‚îú‚îÄ‚îÄ data/                     # Dados hist√≥ricos (gerados automaticamente)
‚îú‚îÄ‚îÄ notebooks/               # Jupyter notebooks para an√°lise
‚îî‚îÄ‚îÄ results/                 # Gr√°ficos e relat√≥rios gerados
```

## üìä M√©tricas Analisadas

### Performance
- Retorno total e por trade
- Taxa de acerto (trades positivos/total)
- Sharpe ratio (retorno/risco)
- Drawdown m√°ximo

### Estat√≠sticas
- An√°lise de normalidade da s√©rie Delta
- Momentos estat√≠sticos (assimetria, curtose)
- Frequ√™ncia de anomalias detectadas

## ‚ö†Ô∏è Disclaimer

- **Finalidade Educacional**: Este projeto √© para fins de estudo e pesquisa
- **N√£o √© Consultoria**: N√£o constitui recomenda√ß√£o de investimento
- **Riscos**: Trading envolve riscos de perda de capital
- **Backtesting**: Resultados passados n√£o garantem performance futura

## ü§ù Contribui√ß√µes

Contribui√ß√µes s√£o bem-vindas! Algumas ideias:

- [ ] Implementar stop-loss/take-profit
- [ ] Adicionar custos de transa√ß√£o
- [ ] Testar em outros √≠ndices/ativos
- [ ] Criar estrat√©gias long-short
- [ ] Otimiza√ß√£o autom√°tica de par√¢metros
- [ ] Interface web interativa

### Como Contribuir
1. Fork o projeto
2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Commit suas mudan√ßas (`git commit -m 'Add some AmazingFeature'`)
4. Push para a branch (`git push origin feature/AmazingFeature`)
5. Abra um Pull Request

## üìù Licen√ßa

Este projeto est√° licenciado sob a Licen√ßa MIT - veja o arquivo [LICENSE](LICENSE) para detalhes.

## üë®‚Äçüíª Autor

**Seu Nome**
- GitHub: [@seu-usuario](https://github.com/seu-usuario)
- LinkedIn: [Seu LinkedIn](https://linkedin.com/in/seu-perfil)
- Email: seu.email@exemplo.com

## üôè Agradecimentos

- [yfinance](https://github.com/ranaroussi/yfinance) pela API de dados financeiros
- [Plotly](https://plotly.com/python/) pelas visualiza√ß√µes interativas
- Comunidade Python de finan√ßas quantitativas

---

‚≠ê **Se este projeto foi √∫til, considere dar uma estrela!** ‚≠ê